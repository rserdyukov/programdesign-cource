@startuml
actor Кинолюбитель
boundary UI

Приложение -> Приложение: build
Приложение -> РекомендацияКино: run
РекомендацияКино -> РекомендацияКино: показатьЭкранПриветствия()
РекомендацияКино --> РекомендацияКино

== Система готова к работе ==

Кинолюбитель --> UI: представиться системе, выбрать пользователя 
UI -> РекомендацияКино: on_выбранПользователь()
РекомендацияКино -> РекомендацияКино: показатьЭкранПервичногоОпроса()
РекомендацияКино --> РекомендацияКино
UI <-- РекомендацияКино

loop для трех фильмов
Кинолюбитель --> UI: выбрать фильм
Кинолюбитель --> UI: добавить общую оценку
UI -> РекомендацияКино: on_выбранаОбщаяОценкаФильма()
UI <-- РекомендацияКино

loop для всех актеров главных ролей
Кинолюбитель --> UI: выбрать актера
Кинолюбитель --> UI: добавить оценку актеру
UI -> РекомендацияКино: on_выбранаОценкаАктераГлавнойРолиФильма
UI <-- РекомендацияКино
end
end

РекомендацияКино -> РекомендацияКино: показатьЭкранВыбораАктера()
РекомендацияКино --> РекомендацияКино

Кинолюбитель --> UI: выбрать актера 
UI -> РекомендацияКино: on_выбранАктер()

РекомендацияКино -> РекомендацияКино: подобратьРекомендации()
РекомендацияКино --> РекомендацияКино

РекомендацияКино -> РекомендацияКино: показатьЭкранРекомендации()
РекомендацияКино --> РекомендацияКино

UI <-- РекомендацияКино

Кинолюбитель --> UI: выбрать фильм 
UI -> РекомендацияКино: on_выбранФильм()
UI <-- РекомендацияКино

== Повторный вход в систему ==

Кинолюбитель --> UI: представиться системе, выбрать пользователя 
UI -> РекомендацияКино: on_выбранПользователь()
РекомендацияКино -> РекомендацияКино: показатьЭкранОпросаПросмотренногоРекомендованногоФильма()
РекомендацияКино --> РекомендацияКино

note over РекомендацияКино: Повторение опроса: общая оценка фильма и актеров главных ролей


@enduml