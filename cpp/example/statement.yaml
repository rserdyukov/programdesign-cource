code: |
  goto Test2;
  std::cout << "testing" << endl;
  Test2:
      std::cout << "At Test2 label." << endl;
tag:
  - statement/labeled statement/goto
  - statement/jump statement/goto
  - statement/expression statement/output operator

---

code: |
  int a = 2;
  switch(a){
  case 1:
      std::cout << "first case\n";
      break;
  case 2:
      std::cout << "second case\n";
      break;
  default:
      std::cout << "default case\n";
  }
tag:
  - statement/labeled statement/case
  - statement/selection statement/switch statement
  - statement/labeled statement/default
  - statement/expression statement/output operator
  - statement/jump statement/break
  - statement/assignment operation/operator =

---

code: |
  for(int i = 0; i < 5; ++i){
    std::cout << i << " ";
  }
tag:
  - statement/iteration statement/for loop
  - statement/expression statement/output operator
  - statement/assignment operation/operator =
  - statement/relational operation/operator <
  - statement/arithmetic operation/unary arithmetic operation/operator ++

---

code: |
  int i = 6;
  while(i--){
    std::cout << i << " ";
  }
tag:
  - statement/iteration statement/while loop
  - statement/assignment operation/operator =
  - statement/arithmetic operation/unary arithmetic operation/operator --
  - statement/expression statement/output operator

---

code: |
  int i = 1;
  do{
    std::cout << i << " ";
  }while(i--);
tag:
  - statement/iteration statement/do-while loop
  - statement/arithmetic operation/unary arithmetic operation/operator --
  - statement/expression statement/output operator

---

code: |
  std::vector<int> v = {1, 2, 3};
  for(int i : v){
    std::cout << i << " ";
  }
tag:
  - statement/iteration statement/range for loop
  - statement/expression statement/output operator

---

code: |
  for(int i = 0; i < 5; ++i){
    if(i == 3){
      continue;
    }
    std::cout << i << " "; 
  }
tag:
  - statement/jump statement/continue
  - statement/selection statement/if-else statement
  - statement/expression statement/relational statement/operator ==
  - statement/iteration statement/for loop
  - statement/expression statement/output operator
  - statement/assignment operation/operator =
  - statement/relational operation/operator <
  - statement/arithmetic operation/unary arithmetic operation/operator ++

---

code: |
  int fn(int a, int b) {
    return a + b;
  }
  int main(){
    std::cout << fn(2, 10);
  }
tag:
  - statement/jump statement/return
  - statement/arithmetic operation/binary arithmetic operation/operator +
  - statement/expression statement/output operator

---

code: | 
  int a;
  std::cin >> a;
  a += 24;
  a -= 4;
  std::cout << a;
tag:
  - statement/expression statement/assignment operation/operator +=
  - statement/expression statementv/assignment operation/operator -=
  - statement/expression statement/output operator
  - statement/expression statement/input operator

---

code: | 
  int a = 3;
  a *= 5;
  a %= 2;
  std::cout << a;
tag:
  - statement/expression statement/assignment operation/operator *=
  - statement/expression statement/assignment operation/operator =
  - statement/expression statement/assignment operation/operator %=
  - statement/expression statement/output operator

---

code: | 
  int a = 9;
  a /= 3;
  std::cout << a % 2;
tag:
  - statement/expression statement/assignment/operator /=
  - statement/expression statement/arithmetic operation/binary arithmetic operation/operator %
  - statement/expression statement/assignment operation/operator =
  - statement/expression statement/output operator

---

code: | 
  int a = 3;
  a -= 2;
  std::cout << (a * 2 < 0);
tag:
  - statement/expression statement/assignment/operator -=
  - statement/expression statement/arithmetic operation/binary arithmetic operation/operator *
  - statement/relational operation/operator <
  - statement/expression statement/output operator

---

code: |
  int a = 2;
  int c = 2;
  int b = (a != c);

  if (a >= b){
      std::cout << "a is greater than b or equal to b" << std::endl;
  }
  else if (a <= c){
      std::cout << "a is less than c or equal to c" << std::endl;
  }
tag:
  - statement/expression statement/relational/operator >=
  - statement/selection/if-else statement
  - statement/expression statement/relational/operator <=
  - statement/expression statement/assignment operation/operator =
  - statement/expression statement/output operator
  - statement/expression statement/relational statement/operator !=

---

code: | 
  int a = 3;
  int b = 21;
  std::cout << b / a;
tag:
  - statement/expression statement/arithmetic/binary/operator /
  - statement/expression statement/output operator

---

code: | 
  int a = 3;
  int b = a + 3;
  std::cout << b - 9;
tag:
  - statement/expression statement/arithmetic/binary/operator +
  - statement/expression statement/arithmetic/binary/operator -
  - statement/expression statement/output operator  

---

code: |
  int a = 3;
  int b = a--;
  std::cout << b;
tag:
  - statement/expression statement/arithmetic/unary arithmetic operation/operation --
  - statement/expression statement/output operator  

---

code: |
  int a = 3;
  int b = --a;
  std::cout << b;
tag:
  - statement/expression statement/arithmetic operation/unary arithmetic operation/operation --
  - statement/expression statement/output operator  

---

code: |
  int a = 5;
  int b = 8;
  bool result = (a > 3) && (b > 9);
  std::cout << result;
  result == (a > 4) && (a > 2);
  std::cout << result;
  bool result = (a > 3) || (b > 9);
  std::cout << result;
tag:
  - statement/expression statement/logical statement/binary logical operation/ operator &&
  - statement/expression statement/relational operation/operator >
  - statement/expression statement/logical statement/binary logical operation/ operator ||
  - statement/expression statement/output operator  


---

code: |
  bool result = (1 > 3) || (4 > 3);
  std::cout << result;
  std::cout << !result;
tag:
  - statement/expression statement/logical operation/unary logical operation/operator !
  - statement/expression statement/relational operation/operator >
  - statement/expression statement/logical statement/binary logical operation/ operator ||
  - statement/expression statement/output operator  

---

code: |
  int a = 3;
  int b = 9;
  int result = b > 10 ? b : a;
  std::cout << result;
tag:
  - statement/expression statement/logical operation/ternary logical operator/"operator ? :"
  - statement/expression statement/output operator  

---

code: |
  int a = 2;
  int b = 3;
  std::cout << (a & b) << (a | b) << (a ^ b);
tag:
  - statement/expression statement/bitwise operation/binary bitwise operation/operator &
  - statement/expression statement/bitwise operation/binary bitwise operation/operator ^
  - statement/expression statement/bitwise operation/binary bitwise operation/operator |
  - statement/expression statement/output operator  

---

code: |
  int a = 3;
  std::cout << (a << 3);
tag:
  - statement/expression statement/bitwise operation/binary bitwise operation/operator <<
  - statement/expression statement/output operator  
---

code: |
  int a = 32;
  std::cout << (a >> 2);
tag:
  - statement/expression statement/bitwise operation/binary bitwise operation/operator >>
  - statement/expression statement/output operator  

---

code: |
  int a = 32;
  std::cout << ~a;
tag:
  - statement/expression statement/bitwise operation/unary bitwise operation/operator ~
  - statement/expression statement/output operator  
